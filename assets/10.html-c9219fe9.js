const s=JSON.parse(`{"key":"v-d4ee2748","path":"/posts/VUE/10.html","title":"瀑布流布局","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","cover":"/assets/images/VUE.png","date":"2022-12-05T00:00:00.000Z","category":["VUE","JS"],"tag":["vue项目技巧","JS技巧"],"description":"瀑布流布局 确定一行容纳几列元素，根据容器的宽度和元素的宽度计算出列数。 寻找各列所有元素高度之和的最小者，并将新元素添加到该列上，更新该列的高度。 继续寻找各列所有元素高度之和的最小者，继续将新元素添加到该列上，直到所有元素排列完成。 使用vue的数据绑定和样式绑定，动态地设置每个元素的位置和大小。 &lt;template&gt; &lt;div class=\\"container\\"&gt; &lt;!-- 容器 --&gt; &lt;div class=\\"waterfall\\" ref=\\"waterfall\\"&gt; &lt;!-- 瀑布流 --&gt; &lt;div class=\\"item\\" v-for=\\"(item, index) in list\\" :key=\\"index\\" :style=\\"{ left: item.left + 'px', top: item.top + 'px' }\\" &gt; &lt;!-- 每个元素 --&gt; &lt;img :src=\\"item.src\\" alt=\\"\\" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/template&gt; &lt;script&gt; export default { name: \\"Waterfall\\", data() { return { list: [], // 存放图片数据 colNum: 0, // 列数 colHeight: [], // 每列的高度 }; }, mounted() { this.init(); // 初始化 this.loadMore(); // 加载更多数据 }, methods: { init() { // 初始化方法 const container = this.$refs.waterfall; // 获取容器元素 const itemWidth = 200; // 设置每个元素的宽度 const gap = 10; // 设置间隙 const containerWidth = container.offsetWidth; // 获取容器的宽度 this.colNum = Math.floor(containerWidth / (itemWidth + gap)); // 计算列数 this.colHeight = new Array(this.colNum).fill(0); // 初始化每列的高度为0 }, loadMore() { // 加载更多数据方法 const data = [ // 模拟数据，每个对象包含图片的地址和高度 { src: \\"https://picsum.photos/id/1/200/300\\", height: 300 }, { src: \\"https://picsum.photos/id/2/200/400\\", height: 400 }, { src: \\"https://picsum.photos/id/3/200/350\\", height: 350 }, { src: \\"https://picsum.photos/id/4/200/250\\", height: 250 }, { src: \\"https://picsum.photos/id/5/200/450\\", height: 450 }, { src: \\"https://picsum.photos/id/6/200/320\\", height: 320 }, { src: \\"https://picsum.photos/id/7/200/280\\", height: 280 }, { src: \\"https://picsum.photos/id/8/200/370\\", height: 370 }, { src: \\"https://picsum.photos/id/9/200/420\\", height: 420 }, { src: \\"https://picsum.photos/id/10/200/310\\", height: 310 }, ]; for (let item of data) { // 遍历数据 this.list.push(this.getPosition(item)); // 将每个数据对象添加到列表中，并计算其位置 } }, getPosition(item) { // 计算每个元素的位置方法 const itemWidth = 200; // 元素的宽度 const gap = 10; // 间隙 const minIndex = this.colHeight.indexOf( Math.min(...this.colHeight) ); // 找到最小高度的列的索引 const left = minIndex * (itemWidth + gap); // 计算元素的左边距，根据列索引和宽度 const top = this.colHeight[minIndex] + gap; // 计算元素的上边距，根据最小高度和间隙 this.colHeight[minIndex] += item.height + gap; // 更新该列的高度，加上元素的高度和间隙 return { ...item, left, top }; // 返回元素对象，包含地址、高度、左边距和上边距 }, }, }; &lt;/script&gt; &lt;style scoped&gt; .container { width: 100%; height: 100%; } .waterfall { margin: 0 auto; position: relative; } .item { position: absolute; width: 200px; } img { width: 100%; height: 100%; } &lt;/style&gt;","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/VUE/10.html"}],["meta",{"property":"og:site_name","content":"3621"}],["meta",{"property":"og:title","content":"瀑布流布局"}],["meta",{"property":"og:description","content":"瀑布流布局 确定一行容纳几列元素，根据容器的宽度和元素的宽度计算出列数。 寻找各列所有元素高度之和的最小者，并将新元素添加到该列上，更新该列的高度。 继续寻找各列所有元素高度之和的最小者，继续将新元素添加到该列上，直到所有元素排列完成。 使用vue的数据绑定和样式绑定，动态地设置每个元素的位置和大小。 &lt;template&gt; &lt;div class=\\"container\\"&gt; &lt;!-- 容器 --&gt; &lt;div class=\\"waterfall\\" ref=\\"waterfall\\"&gt; &lt;!-- 瀑布流 --&gt; &lt;div class=\\"item\\" v-for=\\"(item, index) in list\\" :key=\\"index\\" :style=\\"{ left: item.left + 'px', top: item.top + 'px' }\\" &gt; &lt;!-- 每个元素 --&gt; &lt;img :src=\\"item.src\\" alt=\\"\\" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/template&gt; &lt;script&gt; export default { name: \\"Waterfall\\", data() { return { list: [], // 存放图片数据 colNum: 0, // 列数 colHeight: [], // 每列的高度 }; }, mounted() { this.init(); // 初始化 this.loadMore(); // 加载更多数据 }, methods: { init() { // 初始化方法 const container = this.$refs.waterfall; // 获取容器元素 const itemWidth = 200; // 设置每个元素的宽度 const gap = 10; // 设置间隙 const containerWidth = container.offsetWidth; // 获取容器的宽度 this.colNum = Math.floor(containerWidth / (itemWidth + gap)); // 计算列数 this.colHeight = new Array(this.colNum).fill(0); // 初始化每列的高度为0 }, loadMore() { // 加载更多数据方法 const data = [ // 模拟数据，每个对象包含图片的地址和高度 { src: \\"https://picsum.photos/id/1/200/300\\", height: 300 }, { src: \\"https://picsum.photos/id/2/200/400\\", height: 400 }, { src: \\"https://picsum.photos/id/3/200/350\\", height: 350 }, { src: \\"https://picsum.photos/id/4/200/250\\", height: 250 }, { src: \\"https://picsum.photos/id/5/200/450\\", height: 450 }, { src: \\"https://picsum.photos/id/6/200/320\\", height: 320 }, { src: \\"https://picsum.photos/id/7/200/280\\", height: 280 }, { src: \\"https://picsum.photos/id/8/200/370\\", height: 370 }, { src: \\"https://picsum.photos/id/9/200/420\\", height: 420 }, { src: \\"https://picsum.photos/id/10/200/310\\", height: 310 }, ]; for (let item of data) { // 遍历数据 this.list.push(this.getPosition(item)); // 将每个数据对象添加到列表中，并计算其位置 } }, getPosition(item) { // 计算每个元素的位置方法 const itemWidth = 200; // 元素的宽度 const gap = 10; // 间隙 const minIndex = this.colHeight.indexOf( Math.min(...this.colHeight) ); // 找到最小高度的列的索引 const left = minIndex * (itemWidth + gap); // 计算元素的左边距，根据列索引和宽度 const top = this.colHeight[minIndex] + gap; // 计算元素的上边距，根据最小高度和间隙 this.colHeight[minIndex] += item.height + gap; // 更新该列的高度，加上元素的高度和间隙 return { ...item, left, top }; // 返回元素对象，包含地址、高度、左边距和上边距 }, }, }; &lt;/script&gt; &lt;style scoped&gt; .container { width: 100%; height: 100%; } .waterfall { margin: 0 auto; position: relative; } .item { position: absolute; width: 200px; } img { width: 100%; height: 100%; } &lt;/style&gt;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/assets/images/VUE.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-11T16:13:18.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"瀑布流布局"}],["meta",{"property":"article:author","content":"no-3621"}],["meta",{"property":"article:tag","content":"vue项目技巧"}],["meta",{"property":"article:tag","content":"JS技巧"}],["meta",{"property":"article:published_time","content":"2022-12-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-11T16:13:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"瀑布流布局\\",\\"image\\":[\\"https://mister-hope.github.io/assets/images/VUE.png\\"],\\"datePublished\\":\\"2022-12-05T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-11T16:13:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"no-3621\\",\\"url\\":\\"https://mrhope.site\\"}]}"]]},"headers":[],"git":{"createdTime":1686336542000,"updatedTime":1686499998000,"contributors":[{"name":"as3621","email":"1204846742@qq.com","commits":2}]},"readingTime":{"minutes":2,"words":599},"filePathRelative":"posts/VUE/10.md","localizedDate":"2022年12月5日","excerpt":"<h1> 瀑布流布局</h1>\\n<p>确定一行容纳几列元素，根据容器的宽度和元素的宽度计算出列数。</p>\\n<p>寻找各列所有元素高度之和的最小者，并将新元素添加到该列上，更新该列的高度。</p>\\n<p>继续寻找各列所有元素高度之和的最小者，继续将新元素添加到该列上，直到所有元素排列完成。</p>\\n<p>使用vue的数据绑定和样式绑定，动态地设置每个元素的位置和大小。</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token operator\\">&lt;</span>template<span class=\\"token operator\\">&gt;</span>\\n  <span class=\\"token operator\\">&lt;</span>div <span class=\\"token keyword\\">class</span><span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"container\\"</span><span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">!</span><span class=\\"token operator\\">--</span> 容器 <span class=\\"token operator\\">--</span><span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span>div <span class=\\"token keyword\\">class</span><span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"waterfall\\"</span> ref<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"waterfall\\"</span><span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">!</span><span class=\\"token operator\\">--</span> 瀑布流 <span class=\\"token operator\\">--</span><span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token operator\\">&lt;</span>div\\n        <span class=\\"token keyword\\">class</span><span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"item\\"</span>\\n        v<span class=\\"token operator\\">-</span><span class=\\"token keyword\\">for</span><span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"(item, index) in list\\"</span>\\n        <span class=\\"token operator\\">:</span>key<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"index\\"</span>\\n        <span class=\\"token operator\\">:</span>style<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"{ left: item.left + 'px', top: item.top + 'px' }\\"</span>\\n      <span class=\\"token operator\\">&gt;</span>\\n        <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">!</span><span class=\\"token operator\\">--</span> 每个元素 <span class=\\"token operator\\">--</span><span class=\\"token operator\\">&gt;</span>\\n        <span class=\\"token operator\\">&lt;</span>img <span class=\\"token operator\\">:</span>src<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"item.src\\"</span> alt<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"\\"</span> <span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>div<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>div<span class=\\"token operator\\">&gt;</span>\\n  <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>div<span class=\\"token operator\\">&gt;</span>\\n<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>template<span class=\\"token operator\\">&gt;</span>\\n\\n<span class=\\"token operator\\">&lt;</span>script<span class=\\"token operator\\">&gt;</span>\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">default</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token literal-property property\\">name</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Waterfall\\"</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token function\\">data</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token literal-property property\\">list</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">// 存放图片数据</span>\\n      <span class=\\"token literal-property property\\">colNum</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">// 列数</span>\\n      <span class=\\"token literal-property property\\">colHeight</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">// 每列的高度</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token function\\">mounted</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">init</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 初始化</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">loadMore</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 加载更多数据</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token literal-property property\\">methods</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">init</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token comment\\">// 初始化方法</span>\\n      <span class=\\"token keyword\\">const</span> container <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>$refs<span class=\\"token punctuation\\">.</span>waterfall<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 获取容器元素</span>\\n      <span class=\\"token keyword\\">const</span> itemWidth <span class=\\"token operator\\">=</span> <span class=\\"token number\\">200</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 设置每个元素的宽度</span>\\n      <span class=\\"token keyword\\">const</span> gap <span class=\\"token operator\\">=</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 设置间隙</span>\\n      <span class=\\"token keyword\\">const</span> containerWidth <span class=\\"token operator\\">=</span> container<span class=\\"token punctuation\\">.</span>offsetWidth<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 获取容器的宽度</span>\\n      <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>colNum <span class=\\"token operator\\">=</span> Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">floor</span><span class=\\"token punctuation\\">(</span>containerWidth <span class=\\"token operator\\">/</span> <span class=\\"token punctuation\\">(</span>itemWidth <span class=\\"token operator\\">+</span> gap<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 计算列数</span>\\n      <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>colHeight <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Array</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>colNum<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">fill</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 初始化每列的高度为0</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token function\\">loadMore</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token comment\\">// 加载更多数据方法</span>\\n      <span class=\\"token keyword\\">const</span> data <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span>\\n        <span class=\\"token comment\\">// 模拟数据，每个对象包含图片的地址和高度</span>\\n        <span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">src</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"https://picsum.photos/id/1/200/300\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token literal-property property\\">height</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">300</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">src</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"https://picsum.photos/id/2/200/400\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token literal-property property\\">height</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">400</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">src</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"https://picsum.photos/id/3/200/350\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token literal-property property\\">height</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">350</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">src</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"https://picsum.photos/id/4/200/250\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token literal-property property\\">height</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">250</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">src</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"https://picsum.photos/id/5/200/450\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token literal-property property\\">height</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">450</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">src</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"https://picsum.photos/id/6/200/320\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token literal-property property\\">height</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">320</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">src</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"https://picsum.photos/id/7/200/280\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token literal-property property\\">height</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">280</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">src</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"https://picsum.photos/id/8/200/370\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token literal-property property\\">height</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">370</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">src</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"https://picsum.photos/id/9/200/420\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token literal-property property\\">height</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">420</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">src</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"https://picsum.photos/id/10/200/310\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token literal-property property\\">height</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">310</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> item <span class=\\"token keyword\\">of</span> data<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// 遍历数据</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>list<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getPosition</span><span class=\\"token punctuation\\">(</span>item<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 将每个数据对象添加到列表中，并计算其位置</span>\\n      <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token function\\">getPosition</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">item</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token comment\\">// 计算每个元素的位置方法</span>\\n      <span class=\\"token keyword\\">const</span> itemWidth <span class=\\"token operator\\">=</span> <span class=\\"token number\\">200</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 元素的宽度</span>\\n      <span class=\\"token keyword\\">const</span> gap <span class=\\"token operator\\">=</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 间隙</span>\\n      <span class=\\"token keyword\\">const</span> minIndex <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>colHeight<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">indexOf</span><span class=\\"token punctuation\\">(</span>\\n        Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">min</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">...</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>colHeight<span class=\\"token punctuation\\">)</span>\\n      <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 找到最小高度的列的索引</span>\\n      <span class=\\"token keyword\\">const</span> left <span class=\\"token operator\\">=</span> minIndex <span class=\\"token operator\\">*</span> <span class=\\"token punctuation\\">(</span>itemWidth <span class=\\"token operator\\">+</span> gap<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 计算元素的左边距，根据列索引和宽度</span>\\n      <span class=\\"token keyword\\">const</span> top <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>colHeight<span class=\\"token punctuation\\">[</span>minIndex<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">+</span> gap<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 计算元素的上边距，根据最小高度和间隙</span>\\n      <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>colHeight<span class=\\"token punctuation\\">[</span>minIndex<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">+=</span> item<span class=\\"token punctuation\\">.</span>height <span class=\\"token operator\\">+</span> gap<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 更新该列的高度，加上元素的高度和间隙</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token operator\\">...</span>item<span class=\\"token punctuation\\">,</span> left<span class=\\"token punctuation\\">,</span> top <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 返回元素对象，包含地址、高度、左边距和上边距</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>script<span class=\\"token operator\\">&gt;</span>\\n\\n<span class=\\"token operator\\">&lt;</span>style scoped<span class=\\"token operator\\">&gt;</span>\\n<span class=\\"token punctuation\\">.</span>container <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token literal-property property\\">width</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">100</span><span class=\\"token operator\\">%</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token literal-property property\\">height</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">100</span><span class=\\"token operator\\">%</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">.</span>waterfall <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token literal-property property\\">margin</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">0</span> auto<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token literal-property property\\">position</span><span class=\\"token operator\\">:</span> relative<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">.</span>item <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token literal-property property\\">position</span><span class=\\"token operator\\">:</span> absolute<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token literal-property property\\">width</span><span class=\\"token operator\\">:</span> 200px<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\nimg <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token literal-property property\\">width</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">100</span><span class=\\"token operator\\">%</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token literal-property property\\">height</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">100</span><span class=\\"token operator\\">%</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>style<span class=\\"token operator\\">&gt;</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{s as data};
