const n=JSON.parse(`{"key":"v-ea257700","path":"/posts/VUE/7.html","title":"vue实现路由懒加载","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","cover":"/assets/images/VUE.png","date":"2022-11-12T00:00:00.000Z","category":["VUE"],"tag":["vue项目技巧"],"description":"vue实现路由懒加载 动态导入语法 把路由组件用 import() 函数包裹，让它们在被访问时才加载 // 引入Vue和VueRouter import Vue from 'vue' import VueRouter from 'vue-router' // 使用VueRouter插件 Vue.use(VueRouter) // 定义路由配置 const routes = [ { // 路由路径 path: '/home', // 路由名称 name: 'Home', // 路由组件，使用动态导入语法，返回一个Promise对象 component: () =&gt; import('../views/Home.vue') }, { path: '/about', name: 'About', component: () =&gt; import('../views/About.vue') } ] // 创建路由实例 const router = new VueRouter({ // 路由模式，可以是hash或history mode: 'history', // 路由配置 routes }) // 导出路由实例 export default router","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/VUE/7.html"}],["meta",{"property":"og:site_name","content":"3621"}],["meta",{"property":"og:title","content":"vue实现路由懒加载"}],["meta",{"property":"og:description","content":"vue实现路由懒加载 动态导入语法 把路由组件用 import() 函数包裹，让它们在被访问时才加载 // 引入Vue和VueRouter import Vue from 'vue' import VueRouter from 'vue-router' // 使用VueRouter插件 Vue.use(VueRouter) // 定义路由配置 const routes = [ { // 路由路径 path: '/home', // 路由名称 name: 'Home', // 路由组件，使用动态导入语法，返回一个Promise对象 component: () =&gt; import('../views/Home.vue') }, { path: '/about', name: 'About', component: () =&gt; import('../views/About.vue') } ] // 创建路由实例 const router = new VueRouter({ // 路由模式，可以是hash或history mode: 'history', // 路由配置 routes }) // 导出路由实例 export default router"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/assets/images/VUE.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-11T16:13:18.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"vue实现路由懒加载"}],["meta",{"property":"article:author","content":"no-3621"}],["meta",{"property":"article:tag","content":"vue项目技巧"}],["meta",{"property":"article:published_time","content":"2022-11-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-11T16:13:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue实现路由懒加载\\",\\"image\\":[\\"https://mister-hope.github.io/assets/images/VUE.png\\"],\\"datePublished\\":\\"2022-11-12T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-11T16:13:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"no-3621\\",\\"url\\":\\"https://mrhope.site\\"}]}"]]},"headers":[{"level":2,"title":"动态导入语法","slug":"动态导入语法","link":"#动态导入语法","children":[]}],"git":{"createdTime":1686234206000,"updatedTime":1686499998000,"contributors":[{"name":"as3621","email":"1204846742@qq.com","commits":3}]},"readingTime":{"minutes":0.85,"words":255},"filePathRelative":"posts/VUE/7.md","localizedDate":"2022年11月12日","excerpt":"<h1> vue实现路由懒加载</h1>\\n<h2> 动态导入语法</h2>\\n<p>把路由组件用 import() 函数包裹，让它们在被访问时才加载</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// 引入Vue和VueRouter</span>\\n<span class=\\"token keyword\\">import</span> Vue <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'vue'</span>\\n<span class=\\"token keyword\\">import</span> VueRouter <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'vue-router'</span>\\n\\n<span class=\\"token comment\\">// 使用VueRouter插件</span>\\nVue<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">use</span><span class=\\"token punctuation\\">(</span>VueRouter<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">// 定义路由配置</span>\\n<span class=\\"token keyword\\">const</span> routes <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span>\\n  <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 路由路径</span>\\n    <span class=\\"token literal-property property\\">path</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'/home'</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token comment\\">// 路由名称</span>\\n    <span class=\\"token literal-property property\\">name</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'Home'</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token comment\\">// 路由组件，使用动态导入语法，返回一个Promise对象</span>\\n    <span class=\\"token function-variable function\\">component</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token keyword\\">import</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'../views/Home.vue'</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token literal-property property\\">path</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'/about'</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token literal-property property\\">name</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'About'</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token function-variable function\\">component</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token keyword\\">import</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'../views/About.vue'</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">]</span>\\n\\n<span class=\\"token comment\\">// 创建路由实例</span>\\n<span class=\\"token keyword\\">const</span> router <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">VueRouter</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token comment\\">// 路由模式，可以是hash或history</span>\\n  <span class=\\"token literal-property property\\">mode</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'history'</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token comment\\">// 路由配置</span>\\n  routes\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">// 导出路由实例</span>\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">default</span> router\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
